/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JSplitPane;
import javax.swing.JTable;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

import library.LibraryDimension;
import library.LibraryName;
import model.ModelKho;
import model.ModelNhapHang;
import bean.ChiTietNhapHang;
import bean.Food;
import bean.NhapHang;
import controller.ControllerNhapHang;

/**
 *
 * @author HungPham
 */
public class PnNhapHang extends javax.swing.JPanel implements ActionListener {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	int crow = -1;
    /**
     * Creates new form PnViTri
     */
    ControllerNhapHang controller;
    JTable table;
    DefaultTableModel model;

    public PnNhapHang(String title) {
        initComponents();
        LibraryName lbName = new LibraryName();
        tfTitleCenter.setForeground(lbName.getColor_Title_PnCenter());
        tfTitleCenter.setFont(lbName.getFont_Title_PnCenter());
        tfTitleCenter.setText(title);
        pnFoodInTacVu.setBackground(lbName.getColor_small_panel());
        pnFoodTacVu.setBackground(lbName.getColor_small_panel());
        pnFoodTimKiem.setBackground(lbName.getColor_small_panel());
        pnFoodInTimKiem.setBackground(lbName.getColor_small_panel());
        JSplitPane sp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, pnViTriLeft, pnViTriCenter);
        sp.setOneTouchExpandable(true);
        //add(pnViTriTop, BorderLayout.NORTH);
        add(sp, BorderLayout.CENTER);
        pnViTriLeft.setMinimumSize(new Dimension(LibraryDimension.PANEL_LEFT_WIDTH, pnViTriLeft.getSize().height));

        model = new DefaultTableModel() {
            /**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			public boolean isCellEditable(int row, int column) {
                if(column==2||column==3)return true;
                else return false;
            }

            public Class<?> getColumnClass(int col) {
                if (col == 0 || col == 2) {
                    return Integer.class;
                } else {
                    return super.getColumnClass(col);
                }
            }
        };

        controller = new ControllerNhapHang();

        loadTable(null);
        btNhapHangSua.addActionListener(this);
        btNhapHangNhapLai.addActionListener(this);
        btNhapHangFind.addActionListener(this);
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        pnViTri = new javax.swing.JPanel();
        pnViTriTop = new javax.swing.JPanel();
        tfTitleCenter = new javax.swing.JLabel();
        pnViTriLeft = new javax.swing.JPanel();
        pnFoodTacVu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfNhapHangId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabelGiaNhapHang=new javax.swing.JLabel();
        tfNhapHangName = new javax.swing.JTextField();
        pnFoodInTacVu = new javax.swing.JPanel();
        btNhapHangSua = new javax.swing.JButton();
        btNhapHangNhapLai = new javax.swing.JButton();
        tfNhapHangLuong = new javax.swing.JTextField();
        tfNhapGia=new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        pnFoodTimKiem = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfNhapHangIdFind = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfNhapHangNameFind = new javax.swing.JTextField();
        pnFoodInTimKiem = new javax.swing.JPanel();
        btNhapHangFind = new javax.swing.JButton();
        pnViTriCenter = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbNhapHang = new javax.swing.JTable();
        btNhapHang=new javax.swing.JButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setLayout(new java.awt.BorderLayout());

        pnViTri.setLayout(new java.awt.BorderLayout());

        pnViTriTop.setBackground(new java.awt.Color(255, 255, 153));
        pnViTriTop.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tfTitleCenter.setForeground(new java.awt.Color(0, 0, 204));
        tfTitleCenter.setText("Quản lý vị trí");
        pnViTriTop.add(tfTitleCenter);

        pnViTri.add(pnViTriTop, java.awt.BorderLayout.NORTH);

        pnViTriLeft.setBackground(new java.awt.Color(255, 255, 153));
        pnViTriLeft.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5), javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Quản lý tác vụ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 51, 255)))); // NOI18N
        pnViTriLeft.setLayout(new java.awt.BorderLayout());

        pnFoodTacVu.setBackground(new java.awt.Color(255, 255, 255));
        pnFoodTacVu.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("ID Thức Uống");

        tfNhapHangId.setEditable(false);
        tfNhapHangId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNhapHangIdActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên Thức Uống");

        tfNhapHangName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNhapHangNameActionPerformed(evt);
            }
        });

        pnFoodInTacVu.setBackground(new java.awt.Color(255, 255, 255));

        btNhapHangSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-icon.gif"))); // NOI18N
        btNhapHangSua.setText("Sửa");
        btNhapHangSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNhapHangSuaActionPerformed(evt);
            }
        });
        pnFoodInTacVu.add(btNhapHangSua);

        btNhapHangNhapLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.gif"))); // NOI18N
        btNhapHangNhapLai.setText("Nhập lại");
        pnFoodInTacVu.add(btNhapHangNhapLai);

        jLabel3.setText("Số Lượng");
        
        jLabelGiaNhapHang.setText("Giá Nhập");
        javax.swing.GroupLayout pnFoodTacVuLayout = new javax.swing.GroupLayout(pnFoodTacVu);
        pnFoodTacVuLayout.setHorizontalGroup(
        	pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnFoodTacVuLayout.createSequentialGroup()
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(jLabel3)
        				.addComponent(jLabelGiaNhapHang)
        				.addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
        				.addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        			.addGap(18)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(tfNhapHangLuong, 324, 324, 324)
        				.addComponent(tfNhapGia,324, 324, 324)
        				.addComponent(tfNhapHangId, GroupLayout.PREFERRED_SIZE, 78, GroupLayout.PREFERRED_SIZE)
        				.addComponent(tfNhapHangName, 324, 324, 324)))
        		.addGroup(pnFoodTacVuLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(pnFoodInTacVu, GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        			.addContainerGap())
        );
        pnFoodTacVuLayout.setVerticalGroup(
        	pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnFoodTacVuLayout.createSequentialGroup()
        			.addGap(33)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel1)
        				.addComponent(tfNhapHangId, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel2)
        				.addComponent(tfNhapHangName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(14)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabelGiaNhapHang)
        				.addComponent(tfNhapGia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(14)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tfNhapHangLuong, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel3))
        			.addGap(18)
        			.addComponent(pnFoodInTacVu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnFoodTacVu.setLayout(pnFoodTacVuLayout);

        pnViTriLeft.add(pnFoodTacVu, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        pnFoodTimKiem.setBackground(new java.awt.Color(255, 255, 255));
        pnFoodTimKiem.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(0, 0, 204)), javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5)))); // NOI18N

        jLabel5.setText("ID Thức Uống");

        tfNhapHangIdFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNhapHangIdFindActionPerformed(evt);
            }
        });

        jLabel6.setText("Tên Thức Uống");
        
        
        
        tfNhapHangNameFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNhapHangNameFindActionPerformed(evt);
            }
        });

        pnFoodInTimKiem.setBackground(new java.awt.Color(255, 255, 255));

        btNhapHangFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search-icon.png"))); // NOI18N
        btNhapHangFind.setText("Tìm kiếm");
        pnFoodInTimKiem.add(btNhapHangFind);

        javax.swing.GroupLayout pnFoodTimKiemLayout = new javax.swing.GroupLayout(pnFoodTimKiem);
        pnFoodTimKiem.setLayout(pnFoodTimKiemLayout);
        pnFoodTimKiemLayout.setHorizontalGroup(
            pnFoodTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnFoodInTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
            .addGroup(pnFoodTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnFoodTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnFoodTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFoodTimKiemLayout.createSequentialGroup()
                        .addComponent(tfNhapHangIdFind, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfNhapHangNameFind))
                .addContainerGap())
        );
        pnFoodTimKiemLayout.setVerticalGroup(
            pnFoodTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnFoodTimKiemLayout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(pnFoodTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfNhapHangIdFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnFoodTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfNhapHangNameFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnFoodInTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.add(pnFoodTimKiem, java.awt.BorderLayout.CENTER);

        pnViTriLeft.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        pnViTri.add(pnViTriLeft, java.awt.BorderLayout.WEST);

        pnViTriCenter.setLayout(new java.awt.BorderLayout());
        
        tbNhapHang.setAutoCreateRowSorter(true);
        tbNhapHang.setBackground(new java.awt.Color(153, 255, 153));
        tbNhapHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) 
        );
        
        tbNhapHang.setGridColor(new java.awt.Color(255, 255, 255));
        tbNhapHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbNhapHangMousePressed(evt);
            }
        });
        tbNhapHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbNhapHangKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbNhapHang);
        tbNhapHang.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
          
        pnViTriCenter.add(jScrollPane1, java.awt.BorderLayout.CENTER);
        btNhapHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_48.png"))); // NOI18N
        btNhapHang.setText("Nhập Hàng");
        pnViTriCenter.add(btNhapHang, java.awt.BorderLayout.SOUTH);
        btNhapHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NhapHangActionPerformed(evt);
            }
        });
        pnViTri.add(pnViTriCenter, java.awt.BorderLayout.CENTER);
        
        add(pnViTri, java.awt.BorderLayout.CENTER);
        
    }// </editor-fold>                        
    private void NhapHangActionPerformed(java.awt.event.ActionEvent evt){
    	tbNhapHang.getCellEditor().stopCellEditing();
    	boolean isNhapHang=false;
    	float tongtien=0;
    	int rowNumber=tbNhapHang.getRowCount();
    	ModelNhapHang modelNhapHang=new ModelNhapHang();
    	ModelKho modelKho=new ModelKho();
        for(int i=0;i<rowNumber;i++)
        {
           
            try{
                int number=Integer.parseInt(tbNhapHang.getModel().getValueAt(i,2).toString());
                int price=Integer.parseInt(tbNhapHang.getModel().getValueAt(i,3).toString());
                if(number>0&&price>0)
                {
                    tongtien+=number*price;
                    Food food=(Food) tbNhapHang.getValueAt(i, 1);
                    modelNhapHang.addNhaphang(new NhapHang(tongtien));
                    modelNhapHang.add(new ChiTietNhapHang(food.getMafood(),number, price));
                    if(modelKho.checkExitsFood(food.getMafood())){
                    	modelKho.updateKho(food.getMafood(), number);
                    }else{
                    	modelKho.insertKho(food.getMafood(), number);
                    }
                    isNhapHang=true;
                }
                
            }catch(Exception e)
            {
                
            }
        }
        if(isNhapHang){
        	
        }
    }
    private void tfNhapHangNameActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void tfNhapHangIdActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void tfNhapHangIdFindActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void tfNhapHangNameFindActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void tbNhapHangKeyReleased(java.awt.event.KeyEvent evt) {                                     
        setForm();
    }                                    

    private void tbNhapHangMousePressed(java.awt.event.MouseEvent evt) {                                      
        setForm();
    }                                     

   
    private void btNhapHangSuaActionPerformed(java.awt.event.ActionEvent evt) {                                            
             try{
             int soluong=Integer.parseInt(tfNhapHangLuong.getText().toString()); 
             int gia=Integer.parseInt(tfNhapGia.getText().toString());
        	 int hangchon=tbNhapHang.getSelectedRow();
        	 if(soluong>0&&gia>0)
        	 {
        		 tbNhapHang.getModel().setValueAt(soluong, hangchon, 2);
        		 tbNhapHang.getModel().setValueAt(gia, hangchon, 3);
        		 resetForm();
        	 }
             }catch(Exception e){
            	 
             }
         
    }                                           


    // Variables declaration - do not modify                     
    private javax.swing.JButton btNhapHangFind;
    private javax.swing.JButton btNhapHangNhapLai;
    private javax.swing.JButton btNhapHangSua;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelGiaNhapHang;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnFoodInTacVu;
    private javax.swing.JPanel pnFoodInTimKiem;
    private javax.swing.JPanel pnFoodTacVu;
    private javax.swing.JPanel pnFoodTimKiem;
    private javax.swing.JPanel pnViTri;
    private javax.swing.JPanel pnViTriCenter;
    private javax.swing.JPanel pnViTriLeft;
    private javax.swing.JPanel pnViTriTop;
    private javax.swing.JTable tbNhapHang;
    private javax.swing.JTextField tfNhapHangId;
    private javax.swing.JTextField tfNhapHangIdFind;
    
    private javax.swing.JTextField tfNhapHangLuong;
    private javax.swing.JTextField tfNhapGia;
    private javax.swing.JTextField tfNhapHangName;
    private javax.swing.JTextField tfNhapHangNameFind;
    private javax.swing.JLabel tfTitleCenter;
    private javax.swing.JButton btNhapHang;
    // End of variables declaration                   

    @Override
    public void actionPerformed(ActionEvent e) {
        /*if (e.getSource() == btNhapHangThem) {
            NhapHang item = new NhapHang(0, tfNhapHangName.getText(), Integer.parseInt(tfNhapHangLuong.getText()));
            if (controller.add(item) > 0) {
                loadTable(null);
                JOptionPane.showMessageDialog(null, "Thêm thành công");
            }
        } else if (e.getSource() == btNhapHangSua) {
            NhapHang item = new NhapHang(Integer.parseInt(tfNhapHangId.getText()), tfNhapHangName.getText(), Integer.parseInt(tfNhapHangLuong.getText()));
            crow = tbNhapHang.getSelectedRow();
            if (controller.edit(item) > 0) {
                loadTable(null);
                JOptionPane.showMessageDialog(null, "Sửa thành công");
                tbNhapHang.setRowSelectionInterval(crow, crow);
            }
        } else if (e.getSource() == btNhapHangNhapLai){
            resetForm();
        } else if (e.getSource() == btNhapHangXoa){
             int id = 0;
            try{
                id = Integer.parseInt(tfNhapHangId.getText());
            }
            catch (NumberFormatException ex){
                System.out.println("Phải nhập số vào ID");
            }
            NhapHang item = new NhapHang(id, tfNhapHangNameFind.getText(), 0);
            if (controller.del(item) > 0) {
                loadTable(null);
                JOptionPane.showMessageDialog(null, "Xóa thành công");
            }*/
        /*} else if (e.getSource() == btNhapHangFind){
            int id = 0;
            try{
                id = Integer.parseInt(tfNhapHangIdFind.getText());
            }
            catch (NumberFormatException ex){
                System.out.println("Phải nhập số vào ID");
            }
            NhapHang cvFind = new NhapHang(id, tfNhapHangNameFind.getText(), 0);
            loadTable(cvFind);
            
        } */
    }

    public void loadTable(NhapHang item) {
        controller.loadTable(tbNhapHang, model);
        controller.setWidthHeightTable(tbNhapHang);
    }

    public void setForm() {
        crow = tbNhapHang.getSelectedRow();
        Food food=(Food) tbNhapHang.getValueAt(crow, 1);
        tfNhapHangId.setText(food.getMafood()+"");
        tfNhapGia.setText(tbNhapHang.getValueAt(crow, 3).toString());
        tfNhapHangName.setText(tbNhapHang.getValueAt(crow, 1).toString());
        tfNhapHangLuong.setText(tbNhapHang.getValueAt(crow, 2).toString());
    }
    private void resetForm() {
        tfNhapHangId.setText("");
        tfNhapHangName.setText("");
        tfNhapGia.setText("");
        tfNhapHangLuong.setText("");
        crow = -1;
    }
}
