/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

import library.LibraryDimension;
import library.LibraryName;
import render.ComboboxModelChucVu;
import bean.ChucVu;
import bean.User;
import controller.ControllerUser;

/**
 *
 * @author HungPham
 */
public class PnNhanVien extends javax.swing.JPanel implements ActionListener {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form PnViTri
     */
    ControllerUser controller;
    DefaultTableModel model;
    int crow = -1;
    User login;
    public PnNhanVien(String title, User login) {
        initComponents();
        this.login = login;
        LibraryName lbName = new LibraryName();
        tfTitleCenter.setForeground(lbName.getColor_Title_PnCenter());
        tfTitleCenter.setFont(lbName.getFont_Title_PnCenter());
        tfTitleCenter.setText("QUẢN LÝ NHÂN VIÊN");
        JSplitPane sp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, pnViTriLeft, pnViTriCenter);
        sp.setOneTouchExpandable(true);
        //add(pnViTriTop, BorderLayout.NORTH);
        add(sp, BorderLayout.CENTER);
        pnViTriLeft.setMinimumSize(new Dimension(LibraryDimension.PANEL_LEFT_WIDTH, pnViTriLeft.getSize().height));
        controller = new ControllerUser();
        model = new DefaultTableModel() {
            /**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			public boolean isCellEditable(int row, int column) {
                return false;
            }

            public Class<?> getColumnClass(int col) {
                return super.getColumnClass(col);

            }
        };
        loadTable(null);
        loadChucVu(null);
        btUserThem.addActionListener(this);
        btUserSua.addActionListener(this);
        btUserNhapLai.addActionListener(this);
        btUserXoa.addActionListener(this);
    }

    @SuppressWarnings("unchecked")
	public void loadChucVu(ChucVu catSelected) {
        try {
            cbChucVu.setModel(new ComboboxModelChucVu(catSelected));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loadTable(User fitem) {
        try {
            controller.loadTable(tbUser, model, fitem);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    @SuppressWarnings("rawtypes")
	private void initComponents() {

        pnFoodInTimKiem = new javax.swing.JPanel();
        btFoodFind = new javax.swing.JButton();
        pnViTri = new javax.swing.JPanel();
        pnViTriTop = new javax.swing.JPanel();
        tfTitleCenter = new javax.swing.JLabel();
        pnViTriCenter = new javax.swing.JPanel();
        pnViTriLeft = new javax.swing.JPanel();
        pnFoodTacVu = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfUserFullName = new javax.swing.JTextField();
        pnFoodInTacVu = new javax.swing.JPanel();
        btUserThem = new javax.swing.JButton();
        btUserSua = new javax.swing.JButton();
        btUserNhapLai = new javax.swing.JButton();
        btUserXoa = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        tfUserAddess = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfUserEmail = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        tfUserUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pwUserPass = new javax.swing.JPasswordField();
        cbChucVu = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();

        pnFoodInTimKiem.setBackground(new java.awt.Color(255, 255, 255));

        btFoodFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search-icon.png"))); // NOI18N
        btFoodFind.setText("Tìm kiếm");
        pnFoodInTimKiem.add(btFoodFind);

        setLayout(new java.awt.BorderLayout());

        pnViTri.setLayout(new java.awt.BorderLayout());

        pnViTriTop.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tfTitleCenter.setForeground(new java.awt.Color(0, 0, 204));
        tfTitleCenter.setText("Quản lý vị trí");
        pnViTriTop.add(tfTitleCenter);

        pnViTri.add(pnViTriTop, java.awt.BorderLayout.NORTH);

        pnViTriCenter.setLayout(new java.awt.BorderLayout());

        pnViTriLeft.setBackground(new java.awt.Color(255, 255, 153));
        pnViTriLeft.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5), javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Quản lý tác vụ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 51, 255)))); // NOI18N
        pnViTriLeft.setLayout(new java.awt.BorderLayout());

        pnFoodTacVu.setBackground(new java.awt.Color(255, 255, 255));
        pnFoodTacVu.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Họ và tên");

        tfUserFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUserFullNameActionPerformed(evt);
            }
        });

        pnFoodInTacVu.setBackground(new java.awt.Color(255, 255, 255));

        btUserThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_16.png"))); // NOI18N
        btUserThem.setText("Thêm");
        pnFoodInTacVu.add(btUserThem);

        btUserSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-icon.gif"))); // NOI18N
        btUserSua.setText("Sửa");
        pnFoodInTacVu.add(btUserSua);

        btUserNhapLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.gif"))); // NOI18N
        btUserNhapLai.setText("Nhập lại");
        pnFoodInTacVu.add(btUserNhapLai);

        btUserXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/del.gif"))); // NOI18N
        btUserXoa.setText("Xóa");
        pnFoodInTacVu.add(btUserXoa);

        jLabel7.setText("Nơi ở");

        tfUserAddess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUserAddessActionPerformed(evt);
            }
        });

        jLabel8.setText("Chức vụ");

        jLabel15.setText("Email");

        jLabel4.setText("Tài khoản");

        jLabel5.setText("Mật khẩu");

        javax.swing.GroupLayout pnFoodTacVuLayout = new javax.swing.GroupLayout(pnFoodTacVu);
        pnFoodTacVuLayout.setHorizontalGroup(
        	pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnFoodTacVuLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(pnFoodInTacVu, GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        				.addGroup(pnFoodTacVuLayout.createSequentialGroup()
        					.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE)
        						.addComponent(jLabel4)
        						.addComponent(jLabel5)
        						.addComponent(jLabel15, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE)
        						.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(tfUserEmail, 318, 318, 318)
        						.addComponent(tfUserUsername, 318, 318, 318)
        						.addComponent(pwUserPass, 318, 318, 318)
        						.addComponent(tfUserAddess, Alignment.TRAILING, 318, 318, 318)
        						.addComponent(tfUserFullName, Alignment.TRAILING, 318, 318, 318)))
        				.addGroup(pnFoodTacVuLayout.createSequentialGroup()
        					.addComponent(jLabel8)
        					.addGap(39)
        					.addComponent(cbChucVu, 0, 318, Short.MAX_VALUE)))
        			.addContainerGap())
        );
        pnFoodTacVuLayout.setVerticalGroup(
        	pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnFoodTacVuLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tfUserUsername, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel4))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel5)
        				.addComponent(pwUserPass, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tfUserFullName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel2))
        			.addGap(9)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tfUserAddess, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel7))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jLabel15, Alignment.TRAILING)
        				.addComponent(tfUserEmail, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnFoodTacVuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel8)
        				.addComponent(cbChucVu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(pnFoodInTacVu, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap())
        );
        pnFoodTacVu.setLayout(pnFoodTacVuLayout);

        pnViTriLeft.add(pnFoodTacVu, java.awt.BorderLayout.PAGE_START);

        pnViTriCenter.add(pnViTriLeft, java.awt.BorderLayout.WEST);

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbUser.setColumnSelectionAllowed(true);
        tbUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbUserMousePressed(evt);
            }
        });
        tbUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbUserKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbUser);
        tbUser.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbUser.getColumnModel().getColumnCount() > 0) {
            tbUser.getColumnModel().getColumn(0).setResizable(false);
            tbUser.getColumnModel().getColumn(1).setResizable(false);
            tbUser.getColumnModel().getColumn(2).setResizable(false);
            tbUser.getColumnModel().getColumn(3).setResizable(false);
        }

        pnViTriCenter.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pnViTri.add(pnViTriCenter, java.awt.BorderLayout.CENTER);

        add(pnViTri, java.awt.BorderLayout.CENTER);
    }// </editor-fold>                        

    private void tbUserKeyReleased(java.awt.event.KeyEvent evt) {                                   
        setForm();
    }                                  

    private void tfUserAddessActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void tfUserFullNameActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void tbUserMousePressed(java.awt.event.MouseEvent evt) {                                    
        setForm();
    }                                   
    private void setForm() {
        crow = tbUser.getSelectedRow();
        User item = (User) tbUser.getValueAt(crow, 0);
        tfUserUsername.setText(item.getUsername());
        tfUserFullName.setText(item.getFullname());
        tfUserAddess.setText(item.getNoio());
        tfUserEmail.setText(item.getEmail());
    }

    private void resetForm() {
        crow = -1;

        tfUserUsername.setText("");
        tfUserFullName.setText("");
        tfUserAddess.setText("");
        tfUserEmail.setText("");
        pwUserPass.setText("");
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btFoodFind;
    private javax.swing.JButton btUserNhapLai;
    private javax.swing.JButton btUserSua;
    private javax.swing.JButton btUserThem;
    private javax.swing.JButton btUserXoa;
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox cbChucVu;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnFoodInTacVu;
    private javax.swing.JPanel pnFoodInTimKiem;
    private javax.swing.JPanel pnFoodTacVu;
    private javax.swing.JPanel pnViTri;
    private javax.swing.JPanel pnViTriCenter;
    private javax.swing.JPanel pnViTriLeft;
    private javax.swing.JPanel pnViTriTop;
    private javax.swing.JPasswordField pwUserPass;
    private javax.swing.JTable tbUser;
    private javax.swing.JLabel tfTitleCenter;
    private javax.swing.JTextField tfUserAddess;
    private javax.swing.JTextField tfUserEmail;
    private javax.swing.JTextField tfUserFullName;
    private javax.swing.JTextField tfUserUsername;
    // End of variables declaration                   

    @Override
    public void actionPerformed(ActionEvent e) {

        User item = null;
        String password = new String(pwUserPass.getPassword());
        ChucVu c = (ChucVu) cbChucVu.getSelectedItem();
        if (e.getSource() == btUserThem) {

            item = new User(c.getMachucvu(), tfUserUsername.getText(), "", password, tfUserFullName.getText(), tfUserAddess.getText(), tfUserEmail.getText());
            try {
                if (controller.add(item) > 0) {
                    loadTable(null);

                    controller.setWidthHeightTable(tbUser);
                    JOptionPane.showMessageDialog(null, "Thêm thành công!");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (e.getSource() == btUserSua) {
            item = new User(c.getMachucvu(), tfUserUsername.getText(), "", password, tfUserFullName.getText(), tfUserAddess.getText(), tfUserEmail.getText());
            
            try {
                if (controller.edit(item) > 0) {

                    loadTable(null);

                    controller.setWidthHeightTable(tbUser);
                    JOptionPane.showMessageDialog(null, "Sửa thành công!");
                    
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
}
        else if (e.getSource() == btUserNhapLai) {
                    resetForm();
                } else if (e.getSource() == btUserXoa) {
                    String username = "";
                    if (crow > 0) {
                        username = tfUserUsername.getText();
                    }
                    item = new User(c.getMachucvu(), username, "", password, tfUserFullName.getText(), tfUserAddess.getText(), tfUserEmail.getText());
                    try {
                        if (controller.del(item,login) > 0) {
                            loadTable(null);

                            controller.setWidthHeightTable(tbUser);
                            JOptionPane.showMessageDialog(null, "Xóa thành công!");
                            resetForm();
                        }
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(PnNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            
        }
    }

